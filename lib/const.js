const { Markup } = require('telegraf');
exports.colors = ['–ß—ë—Ä–Ω—ã–π', '–°–∏–Ω–∏–π', '–ñ—ë–ª—Ç—ã–π', "–†–æ–∑–æ–≤—ã–π"];
exports.printers = ['Canon', 'Kyocera', 'Epson', 'SHARP', 'HP', "Brother", 'Lexmark']

exports.keyboards = {
	main: Markup.keyboard(
			[['–ü—Ä–∏–Ω—Ç–µ—Ä—ã', '–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è'], ["–§–∏–∑–∏—á–µ—Å–∫–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞", "–°–µ—Ç—å"], ['–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ', "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É"]]
		).resize(),
	printers: Markup.keyboard(
			[['–ó–∞–º–µ–Ω–∞ –∫–∞—Ä—Ç—Ä–∏–¥–∂–∞', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–Ω—Ç–µ—Ä–∞'], ['–î—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã', "–ù–∞–∑–∞–¥"]]
		).resize(),
	applications: Markup.keyboard(
			[['–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–æ–≤', '–õ–æ–∫–∞–ª—å–Ω–æ–µ –ü–û'], ['–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã', '–ù–∞–∑–∞–¥']]
		).resize(),
	back: Markup.keyboard(
				[['–ù–∞–∑–∞–¥']]
		).resize(),
	colors: Markup.keyboard(
			[['–ß—ë—Ä–Ω—ã–π', '–°–∏–Ω–∏–π'], ['–ñ—ë–ª—Ç—ã–π', "–†–æ–∑–æ–≤—ã–π", '–ù–∞–∑–∞–¥']]
		).resize(),
	printModels: Markup.keyboard(
			[['Canon', 'Kyocera', 'Epson', 'SHARP'], ['HP', "Brother", 'Lexmark', '–ù–∞–∑–∞–¥']]
		).resize(),
	final: Markup.keyboard(
			[['–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', '–ù–∞–∑–∞–¥', '–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É']]
		).resize(),
	start: Markup.keyboard([['–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É']]).resize()
};

exports.inlineKeyboards = {
	open: [[{text: '‚úÖ', callback_data: 'CloseTicket'}, {text: 'üí¨', callback_data: 'AddComment'}]],
	close: [[{text: '‚úî', callback_data: 'OpenTicket'}, {text: 'üí¨', callback_data: 'AddComment'}]],
	confirmOpen: [[{text: '–û—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'ConfirmOpen'}, {text: '–û—Ç–º–µ–Ω–∞', callback_data: 'RefreshStatus'}]],
	confirmClose: [[{text: '–ó–∞–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É', callback_data: 'ConfirmClose'}, {text: '–û—Ç–º–µ–Ω–∞', callback_data: 'RefreshStatus'}]],
	userAddComment: [[{text: '‚ùì –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', callback_data: 'UserAddComment'}]],
	threadPin: [[{text: '–ó–∞–∫—Ä—ã—Ç—å —Ç–µ–º—É', callback_data: 'CloseThread'}]],
	threadPinConfirm: [[{text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data: 'ConfirmCloseThread'}, {text: '–û—Ç–º–µ–Ω–∞', callback_data: 'CancelCloseThread'}]]
};